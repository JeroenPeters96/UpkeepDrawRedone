version: "3"
services:
# upd.collectionservice.Services build for the project
  deckservice:
    build:
      context: DeckService/
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    depends_on:
      - mysql
      - mongodbdeck
      - kafka
  accountservice:
    build:
      context: AccountService/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - mongodbacc
      - kafka
  cardservice:
    build:
      context: CardService/
      dockerfile: Dockerfile
    ports:
      - 8082:8080
    depends_on:
      - mysql
      - mongodbcard
      - kafka

  collectionservice:
    build:
      context: CollectionService/
      dockerfile: Dockerfile
    ports:
      - 8083:8080
    depends_on:
      - mysql
      - mongodbcoll
      - kafka
#  edhrecservice:
#
#  priceservice:


#Messaging queue to facilitate messages between services
  zookeeper:
    image: wurstmeister/zookeeper
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper


#MySql databases used in the services
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3308:3306
    volumes:
      - mysql:/var/lib/mysql

#Mongo databaes used in the eventstore's of the different services
  mongodbcoll:
    image: mongo:3.2.4
    container_name: "mongodbacc"
    ports:
      - 27020:27017
    command: --smallfiles
    volumes:
      - mongodbcolldata:/data/db
      - mongocoll-config:/data/configdb

  mongodbacc:
    image: mongo:3.2.4
    container_name: "mongodbacc"
    ports:
      - 27017:27017
    command: --smallfiles
    volumes:
      - mongodbaccdata:/data/db
      - mongoacc-config:/data/configdb
  mongodbdeck:
    image: mongo:3.2.4
    container_name: "mongodbdeck"
    ports:
      - 27018:27017
    command: --smallfiles
    volumes:
      - mongodbdeckdata:/data/db
      - mongodeck-config:/data/configdb
  mongodbcard:
    image: mongo:3.2.4
    container_name: "mongodbcard"
    ports:
      - 27019:27017
    command: --smallfiles
    volumes:
      - mongocard-config:/data/configdb
      - mongocarddata:/data/db

# Systems used in testing

  intergration:
    build:
      context: IntergrationTest/
      dockerfile: Dockerfile
    depends_on:
      - testmysql
      - testkafka
      - testmongodb
  testmysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3312:3306
    volumes:
      - mysqltest:/var/lib/mysql
  testkafka:
    image: wurstmeister/kafka
    ports:
      - 9099:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
  testmongodb:
    image: mongo:3.2.4
    container_name: "testmongodb"
    ports:
      - 27020:27017
    command: --smallfiles
    volumes:
      - mdbtest-data:/data/db
      - mongotest-config:/data/configdb
volumes:
  mdb-data:
  mongo-config:

  mysql:

  mongoacc-config:
  mongodbaccdata:

  mongodeck-config:
  mongodbdeckdata:

  mongocard-config:
  mongocarddata:

  mongocoll-config:
  mongodbcolldata:


  mysqltest:
  mdbtest-data:
  mongotest-config:
