version: "3"
services:
  deckservice:
    build:
      context: DeckService/
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - mysql
      - mongodbdeck
      - kafka
  accountservice:
    build:
      context: AccountService/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - mongodbacc
      - kafka
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: password
    ports:
     - 3306:3306
    volumes:
     - mysql:/var/lib/mysql
  zookeeper:
    image: wurstmeister/zookeeper
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  mongodbacc:
    image: mongo:3.2.4
    container_name: "mongodbacc"
    ports:
      - 27017:27017
    command: --smallfiles
    volumes:
      - mdb-data:/data/db
      - mongo-config:/data/configdb
  mongodbdeck:
    image: mongo:3.2.4
    container_name: "mongodbdeck"
    ports:
      - 27018:27018
    command: --smallfiles
    volumes:
      - mdb-data:/data/db
      - mongo-config:/data/configdb
volumes:
  mysql:
  mdb-data:
  mongo-config:
